// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           Int      @id @default(autoincrement())
  nome         String   @db.VarChar(60)
  email        String   @db.VarChar(40)
  senha        String   @db.VarChar(60)   // senha deve ser varchar(60)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt  
  carros       Carro[]
  logs         Log[]
  @@map("usuarios")
}

model Carro {
  id               Int         @id @default(autoincrement())
  modelo           String      @db.VarChar(60)
  marca            String      @db.VarChar(40)
  ano              Int         @db.SmallInt
  usuario          Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId        Int
  QtdPassageiros   Int         @db.SmallInt
  custo_mensal     Decimal     @db.Decimal(9, 2)
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt  
  // QuantPassageiros Passageiros @default(Cinco)
  deleted          Boolean     @default(false)
  @@map("carros")
}

model Log {
  id           Int      @id @default(autoincrement())
  descricao    String   @db.VarChar(60)
  complemento  String   @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt  
  usuario      Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId    Int
  @@map("logs")
}

// enum Passageiros {
//   Dois  @map("2")
//   Cinco @map("5")
//   Sete  @map("7")
// }

